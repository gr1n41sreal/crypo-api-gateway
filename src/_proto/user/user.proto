syntax = "proto3";

import "user/role.proto";
import "user/user-enums.proto";

package crypo.user;

service UserService {
  // User
  rpc CreateUser(CreateUserRequest) returns (User) {}
  rpc GetUsers(Stub) returns (UserList) {}
  rpc GetUserByProp(GetUserByPropRequest) returns (GetUserByPropResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (User) {}
  rpc ValidatePassword(ValidatePasswordRequest) returns (ValidatePasswordResponse) {}
  rpc ChangeUserRole(ChangeUserRoleRequest) returns (User) {};
}

// User

message UserList {
  repeated User users = 1;
}

message User {
  uint32 id = 1;
  bool is_active = 2;
  string email = 3;
  string phone = 4;
  role.Role role = 5;
  string first_name = 6;
  string last_name = 7;
}

message CreateUserRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string phone = 4;
  string password = 5;
  UserRoles role = 6;
}

message GetUserByPropRequest {
  AvailableUserFilterProps prop = 1;
  string value = 2;
}

message GetUserByPropResponse {
  User user = 1;
}

message UpdateUserRequest {
  uint32 id = 1;
  string email = 2;
  string phone = 3;
}

message ValidatePasswordRequest {
  string phone = 1;
  string password = 2;
}

message ValidatePasswordResponse {
  User user = 1;
  bool success = 2;
}

message ChangeUserRoleRequest {
  uint32 id = 1;
  UserRoles role = 2;
}

// Other

message SendStatus {
  bool success = 1;
}

message Stub {}
